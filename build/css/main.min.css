@font-face{font-family:montserratmedium;src:url(../assets/fonts/montserrat-medium-webfont.eot);src:url(../assets/fonts/montserrat-medium-webfont.eot?#iefix) format("embedded-opentype"),url(../assets/fonts/montserrat-medium-webfont.woff2) format("woff2"),url(../assets/fonts/montserrat-medium-webfont.woff) format("woff"),url(../assets/fonts/montserrat-medium-webfont.ttf) format("truetype"),url(../assets/fonts/montserrat-medium-webfont.svg#montserratmedium) format("svg");font-weight:400;font-style:normal}@font-face{font-family:montserratregular;src:url(../assets/fonts/montserrat-regular-webfont.eot);src:url(../assets/fonts/montserrat-regular-webfont.eot?#iefix) format("embedded-opentype"),url(../assets/fonts/montserrat-regular-webfont.woff2) format("woff2"),url(../assets/fonts/montserrat-regular-webfont.woff) format("woff"),url(../assets/fonts/montserrat-regular-webfont.ttf) format("truetype"),url(../assets/fonts/montserrat-regular-webfont.svg#montserratregular) format("svg");font-weight:400;font-style:normal}@font-face{font-family:montserratsemibold;src:url(../assets/fonts/montserrat-semibold-webfont.eot);src:url(../assets/fonts/montserrat-semibold-webfont.eot?#iefix) format("embedded-opentype"),url(../assets/fonts/montserrat-semibold-webfont.woff2) format("woff2"),url(../assets/fonts/montserrat-semibold-webfont.woff) format("woff"),url(../assets/fonts/montserrat-semibold-webfont.ttf) format("truetype"),url(../assets/fonts/montserrat-semibold-webfont.svg#montserratsemibold) format("svg");font-weight:400;font-style:normal}

/*! normalize.css v8.0.0 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{font-size:16px}body,html{width:100%;height:100%}body{line-height:1.42;-webkit-font-smoothing:antialiased}.wrapper{position:relative;min-width:1140px;min-height:100%;overflow:hidden}.wrapper:after{display:block;height:60px;overflow:hidden;content:""}.container{width:1120px;margin:0 auto}*{box-sizing:border-box}h1,h2,h3,h4,h5,h6{margin-top:0;font-weight:400}p{margin:0}a{text-decoration:none;outline:none}ul{padding:0;margin:0}li{list-style:none}input[type=number]{-moz-appearance:textfield}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}footer{position:relative;min-width:1140px;width:100%;height:60px;margin-top:-60px}.wrapper{background:#fff}.title{padding-bottom:.9375rem;font-size:3.5rem;color:#161918}.desc,.title{font-family:montserratregular}.desc{padding-bottom:3.125rem;font-size:.8125rem;color:#7f7f7f}.btn{font-family:montserratregular;display:inline-block;padding:1.5625rem 2.8125rem;font-size:.75rem;text-transform:uppercase;color:#fff;background:#000;transition:all .3s}.btn:hover{background:#292929}.btn:active{color:#000;background:#fff}.nav{display:flex;justify-content:center;align-items:center;padding:1.25rem 0}.nav__link{font-family:montserratsemibold;padding:.625rem;margin-right:4.375rem;font-size:.75rem;text-transform:uppercase;color:#161918;transition:all .3s}.nav__link:hover{background:#000;color:#fff}.nav__link:active{color:#000}.nav__link:last-child{margin-right:0}.swiper-container{width:100%;height:100%}.swiper-button-nx,.swiper-button-pr{position:absolute;top:50%;width:3.75rem;height:3.75rem;z-index:1;border:3px solid #fff;border-radius:50%;cursor:pointer;transition:all .3s}.swiper-button-pr{left:20px;right:auto;background:transparent}.swiper-button-pr:hover{background:#292929}.swiper-button-pr:hover .swiper__svg{fill:#fff}.swiper-button-nx{right:20px;left:auto;background:#292929}.swiper-button-nx:hover{background:#fff}.swiper-button-nx:hover .swiper__svg{fill:#292929}.swiper__svg{position:absolute;top:50%;left:50%;transform:translate(-50%,-50%);width:25px;height:25px;fill:#979797;transition:all .3s}.swiper-pagination{text-align:left}.swiper-container-horizontal>.swiper-pagination-bullets{left:110px}.swiper-pagination-bullet{border-radius:0;background:#fff;opacity:1;transition:all .3s}.swiper-pagination-bullet:hover{background:#292929}.swiper-pagination-bullet-active,.swiper-pagination-bullet:active{background:#000}.header__head{display:flex;justify-content:space-between;align-items:center;padding-bottom:1.875rem;border-bottom:1px solid #d4d4d4}.header__svg-wrapper{display:flex}.header__svg{width:1.5625rem;height:1.5625rem;fill:#161918;transition:all .3s}.header__svg:first-child{margin-right:1.5625rem}.header__svg:hover{transform:scale(1.1)}.header__svg:active{transform:none}.logo{display:block;transition:all .3s}.logo:hover{transform:scale(1.1)}.logo:active{transform:none}.header__svg-basket{position:relative;transition:all .3s}.header__svg-basket .header__svg{margin-right:0;transform:none}.header__svg-basket:hover{transform:scale(1.1)}.header__svg-basket:active{transform:none}.buyings-count{font-family:montserratmedium;position:absolute;right:-5px;bottom:2px;width:15px;height:15px;padding-top:1px;font-size:8px;line-height:15px;text-align:center;border-radius:50%;color:#fff;background:#000}.footer{background:#1e1b1b}.footer .container{display:flex;justify-content:space-between;align-items:center;height:100%}.copyright{font-family:montserratregular;font-size:.8125rem;color:#959494}.payment{display:flex}.payment__method{margin-right:.9375rem}.payment__method:last-child{margin-right:0}.payment__method img{display:block;width:2.1875rem}.intro{padding:2.5rem 0;background:url(../assets/img/intro/intro-bg.png) 50% no-repeat;background-size:cover}.intro .desc{max-width:370px}.swiper-slide .container{padding:9.375rem 0}.pros{padding:2.5rem 0}.pros .desc{max-width:320px;text-align:center}.pros__list{justify-content:space-between}.pros__item,.pros__list{display:flex;align-items:center}.pros__item{flex-direction:column}.pros__item .title{font-family:montserratsemibold;font-size:.875rem}.pros__svg{width:3.75rem;height:3.75rem;margin-bottom:1.5625rem;fill:#818181}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
